(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{419:function(r,a,t){r.exports=t.p+"assets/img/MarkWord.42eb9fc2.png"},480:function(r,a,t){"use strict";t.r(a);var s=t(2),e=Object(s.a)({},(function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h2",{attrs:{id:"synchronize锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronize锁"}},[r._v("#")]),r._v(" synchronize锁")]),r._v(" "),a("h3",{attrs:{id:"锁状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁状态"}},[r._v("#")]),r._v(" 锁状态")]),r._v(" "),a("p",[r._v("引入偏向锁和轻量级锁时基于这样的判断L：尽管需要对存在线程安全的代码加锁，但实际上，出现同一时刻多个线程竞争锁的概率很小，甚至在大多数情况下都只被一个线程使用，")]),r._v(" "),a("p",[r._v("对于一个synchronize锁，如果它只有一个线程使用，那么synchronize底层就使用偏向锁实现，如果它被多个线程交叉使用，不存在竞争的情况，那么synchronize底层就使用轻量级锁实现，如果存在竞争使用的情况，那么synchronize底层就使用重量级锁实现")]),r._v(" "),a("p",[r._v("锁的实现需要使用对象头的Mark Word（标记字）,它主要用来表示对象的线程锁状态，另外还可以用来配合GC、存放该对象的hashCode，MarkWord是可变字段，在不同的情况下存储不同的内容")]),r._v(" "),a("p",[a("img",{attrs:{src:t(419),alt:"image-20230328220751986"}})]),r._v(" "),a("h3",{attrs:{id:"偏向锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁"}},[r._v("#")]),r._v(" 偏向锁")]),r._v(" "),a("p",[r._v("当一个对象刚被创建时，MarkWord是无锁状态，并随即很快会变成偏向锁状态，可以设置JVM参数 "),a("code",[r._v("--XX:BiasedLockingStartupDelay=0")]),r._v(",那么MarkWorld在对象创建后直接进入偏向锁状态MarkWord中threadID为0，意思是还没有线程获得锁，")]),r._v(" "),a("p",[r._v("如果某个线程在某个对象上使用了synchronize关键字，发现这个对象的MarkWord处于偏向锁状态，并且threadID为0，那么就会通过CAS操作来竞争这个偏向锁：先判断MarkWord的偏向模式的值为1（1：代表偏向锁模式），然后将threadID 设为当前线程ID，获取偏向锁成功，按照前面的假设，偏向锁只有一个线程在使用，那么CAS操作一定可以获取到锁，线程获取到锁后就可以继续执行业务代码，执行完成后偏向锁并不会释放锁，这是偏向锁区别于轻量级锁和重量级锁的一个特点，这样的目的是为了提高加锁效率，因为只有一个线程来获取锁，那么当同一个线程再次竞争这个偏向锁时，线程发现MarkWord处于偏向锁状态并且threadID正好是自己的线程ID，那么线程就不需要做任何的加锁操作就直接可以执行业务代码了，")]),r._v(" "),a("p",[r._v("而CAS操作使用的是硬件层面上提供的CPU指令，本质上是对总线加锁，这种操作执行效率比较低，所以减少CAS操作会大大提高加锁的性能，这也是偏向锁相对于偏向锁更加高性能的原因。轻量级锁的实现需要大量的CAS操作，而偏向锁只有在第一次竞争锁的时候使用一次CAS操作，之后再次加锁都不需要使用CAS操作了。")]),r._v(" "),a("h3",{attrs:{id:"轻量级锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[r._v("#")]),r._v(" 轻量级锁")]),r._v(" "),a("p",[r._v("如果有两个线程竞争偏向锁，可以分两种情况，第一种情况：两个线程同时竞争偏向锁，其中一个竞争成功，另外一个竞争失败，第二种情况，已经有一个线程获取了偏向锁，这个时候又有一个线程来获取偏向锁，这两种情况都已经不符合偏向锁的使用场景了，这个时候竞争偏向锁的线程就会将偏向锁升级为轻量级锁，")]),r._v(" "),a("h3",{attrs:{id:"重量级锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[r._v("#")]),r._v(" 重量级锁")])])}),[],!1,null,null,null);a.default=e.exports}}]);